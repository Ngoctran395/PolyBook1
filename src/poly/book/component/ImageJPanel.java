/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.book.component;

import java.awt.Image;
import java.io.File;
import java.util.function.Consumer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import lombok.Getter;
import lombok.Setter;
import poly.book.util.XIcon;


/**
 *
 * @author DELL
 */
public class ImageJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public ImageJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        lblPicture = new javax.swing.JLabel();

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 102), 1, true));
        setLayout(new java.awt.BorderLayout());

        lblPicture.setFont(new java.awt.Font("Impact", 1, 18)); // NOI18N
        lblPicture.setForeground(new java.awt.Color(255, 102, 102));
        lblPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPicture.setText("Image");
        lblPicture.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPicture.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPictureMouseClicked(evt);
            }
        });
        add(lblPicture, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void lblPictureMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPictureMouseClicked
        // TODO add your handling code here:
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = XIcon.copyTo(fileChooser.getSelectedFile(), this.folder);
            this.setIcon(file.getName());
            if (this.fileChanged != null) {
                this.fileChanged.accept(file);
            }
        }
    }//GEN-LAST:event_lblPictureMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel lblPicture;
    // End of variables declaration//GEN-END:variables

    @Getter
    @Setter
    String folder = "images";
    Consumer<File> fileChanged;

    public String getIcon() {
        return lblPicture.getToolTipText();
    }

   public void setIcon(String iconName) {
    File file = new File(folder, iconName);
    if (file.exists()) {
        XIcon.setIcon(lblPicture, file);      // Cài icon
        lblPicture.setText("");               // Xóa chữ "No image"
        lblPicture.setToolTipText(iconName);  // ✅ Quan trọng: set lại tooltip
    } else {
        lblPicture.setIcon(null);
        lblPicture.setText("No image");
        lblPicture.setToolTipText(null);
    }
}


    public void setImage(Image image) {
    lblPicture.setText("");
    lblPicture.setToolTipText("custom image");
    
    if (image != null) {
        int width = lblPicture.getWidth();
        int height = lblPicture.getHeight();
        
        // Nếu width hoặc height chưa được set (0), có thể dùng kích thước mặc định hoặc ảnh gốc
        if (width <= 0 || height <= 0) {
            width = image.getWidth(null);
            height = image.getHeight(null);
        }

        Image scaled = image.getScaledInstance(width, height, Image.SCALE_SMOOTH);
        lblPicture.setIcon(new ImageIcon(scaled));
    } else {
        lblPicture.setIcon(null);  // Xóa icon nếu ảnh null
        lblPicture.setText("No image");
    }
}

}
