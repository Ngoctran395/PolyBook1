/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poly.book.ui;

import java.awt.Image;
import java.net.URL;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JMenuBar;
import poly.book.component.ImageJPanel;
import poly.book.util.XAuth;
import poly.book.util.XDialog;

/**
 *
 * @author Dell
 */
public class PolyBookJFrame extends javax.swing.JFrame implements PolyBookController {

    /**
     * Creates new form PolyBook
     */
    public PolyBookJFrame() {
        initComponents();
        init();  // phân quyền
        showUserInfo();    // hiện ảnh và tên
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlPhoto = new poly.book.component.ImageJPanel();
        lblGreeting = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuHome = new javax.swing.JMenu();
        mnuBill = new javax.swing.JMenu();
        mnuChangePassword = new javax.swing.JMenu();
        mnuHistory = new javax.swing.JMenu();
        mnuManagement = new javax.swing.JMenu();
        mniCateroryManager = new javax.swing.JMenuItem();
        mniBookManager = new javax.swing.JMenuItem();
        mniBillManager = new javax.swing.JMenuItem();
        mniUserManager = new javax.swing.JMenuItem();
        mniRevenueManager = new javax.swing.JMenuItem();
        mniCustomerManager = new javax.swing.JMenuItem();
        mnuExit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(pnlPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 70, 70));

        lblGreeting.setText("Xin chào ");
        jPanel1.add(lblGreeting, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/book/icons/z6794744667013_6547702b4c19bdfc584cffb0b662970a.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 760, 390));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 390));

        mnuHome.setForeground(new java.awt.Color(0, 0, 255));
        mnuHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/book/icons/Icon Application/Icon Application/Home.png"))); // NOI18N
        mnuHome.setText("Trang chủ");
        jMenuBar1.add(mnuHome);

        mnuBill.setForeground(new java.awt.Color(0, 0, 255));
        mnuBill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/book/icons/Icojam-Blueberry-Basic-Shopping-cart.32.png"))); // NOI18N
        mnuBill.setText("Bán hàng");
        mnuBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBillActionPerformed(evt);
            }
        });
        jMenuBar1.add(mnuBill);

        mnuChangePassword.setForeground(new java.awt.Color(0, 0, 255));
        mnuChangePassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/book/icons/Fatcow-Farm-Fresh-Change-password.32.png"))); // NOI18N
        mnuChangePassword.setText("Đổi mật khẩu");
        mnuChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuChangePasswordActionPerformed(evt);
            }
        });
        jMenuBar1.add(mnuChangePassword);

        mnuHistory.setForeground(new java.awt.Color(0, 0, 255));
        mnuHistory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/book/icons/URL-history-icon.png"))); // NOI18N
        mnuHistory.setText("Lịch sử");
        mnuHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHistoryActionPerformed(evt);
            }
        });
        jMenuBar1.add(mnuHistory);

        mnuManagement.setForeground(new java.awt.Color(0, 0, 255));
        mnuManagement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/book/icons/Fatcow-Farm-Fresh-Ssl-tls-manager.32.png"))); // NOI18N
        mnuManagement.setText("Quản lý");

        mniCateroryManager.setText("Quản lý loại sách");
        mniCateroryManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniCateroryManagerActionPerformed(evt);
            }
        });
        mnuManagement.add(mniCateroryManager);

        mniBookManager.setText("Quản lý sách theo loại");
        mniBookManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniBookManagerActionPerformed(evt);
            }
        });
        mnuManagement.add(mniBookManager);

        mniBillManager.setText("Quản lý hóa đơn");
        mniBillManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniBillManagerActionPerformed(evt);
            }
        });
        mnuManagement.add(mniBillManager);

        mniUserManager.setText("Quản lý người dùng");
        mniUserManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniUserManagerActionPerformed(evt);
            }
        });
        mnuManagement.add(mniUserManager);

        mniRevenueManager.setText("Quản lý doanh thu");
        mniRevenueManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniRevenueManagerActionPerformed(evt);
            }
        });
        mnuManagement.add(mniRevenueManager);

        mniCustomerManager.setText("Quản lý khách hàng");
        mniCustomerManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniCustomerManagerActionPerformed(evt);
            }
        });
        mnuManagement.add(mniCustomerManager);

        jMenuBar1.add(mnuManagement);

        mnuExit.setForeground(new java.awt.Color(0, 0, 255));
        mnuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/book/icons/Icon Application/Icon Application/Log out.png"))); // NOI18N
        mnuExit.setText("Kết thúc");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        jMenuBar1.add(mnuExit);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniCateroryManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniCateroryManagerActionPerformed
        // TODO add your handling code here:
        showCategoryManagerJDialog(this);
    }//GEN-LAST:event_mniCateroryManagerActionPerformed

    private void mnuBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBillActionPerformed
        // TODO add your handling code here:
        showBillJDialog(this);
    }//GEN-LAST:event_mnuBillActionPerformed

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        // TODO add your handling code here:
       this.exit();
    }//GEN-LAST:event_mnuExitActionPerformed

    private void mniBookManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniBookManagerActionPerformed
        // TODO add your handling code here:
        showBookManagerJDialog(this);
    }//GEN-LAST:event_mniBookManagerActionPerformed

    private void mniBillManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniBillManagerActionPerformed
        // TODO add your handling code here:
        showBillManagerJDialog(this);
    }//GEN-LAST:event_mniBillManagerActionPerformed

    private void mniUserManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniUserManagerActionPerformed
        // TODO add your handling code here:
        showUserManagerJDialog(this);
    }//GEN-LAST:event_mniUserManagerActionPerformed

    private void mniRevenueManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniRevenueManagerActionPerformed
        // TODO add your handling code here:
        showRevenueManagerJDialog(this);
    }//GEN-LAST:event_mniRevenueManagerActionPerformed

    private void mniCustomerManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniCustomerManagerActionPerformed
        // TODO add your handling code here:
        showCustomerManagerJDialog(this);
    }//GEN-LAST:event_mniCustomerManagerActionPerformed

    private void mnuChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuChangePasswordActionPerformed
        // TODO add your handling code here:
        showChangePasswordJDialog(this);
    }//GEN-LAST:event_mnuChangePasswordActionPerformed

    private void mnuHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuHistoryActionPerformed
        // TODO add your handling code here:
        showHistoryJDialog(this);
    }//GEN-LAST:event_mnuHistoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PolyBookJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PolyBookJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PolyBookJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PolyBookJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                WelcomeJDialog welcome = new WelcomeJDialog(null, true);
                welcome.setLocationRelativeTo(null);
                welcome.setVisible(true);
                LoginJDialog login = new LoginJDialog(null, true);
                login.setLocationRelativeTo(null);
                login.setVisible(true);
                if (XAuth.user != null) {
                    new PolyBookJFrame().setVisible(true);
                } else {
                    System.exit(0); // Thoát nếu chưa đăng nhập
                }
            }
        });
    }

    @Override
    public void init() {

        JMenuBar menuBar = getJMenuBar(); // lấy menuBar hiện tại
        menuBar.removeAll(); // xóa toàn bộ menu hiện tại

        boolean isManager = XAuth.user.isManager(); // kiểm tra quyền

        // Trang chủ luôn có
        menuBar.add(mnuHome);              // Trang chủ (nếu có)

        // Bán hàng, đổi mật khẩu, lịch sử: ai cũng có
        menuBar.add(mnuBill);              // Bán hàng
        menuBar.add(mnuChangePassword);    // Đổi mật khẩu
        menuBar.add(mnuHistory);           // Lịch sử

        // Chỉ quản lý có quyền quản lý
        if (isManager) {
            menuBar.add(mnuManagement);    // Quản lý
        }

        // Đẩy Kết thúc ra bên phải
        menuBar.add(Box.createHorizontalGlue());
        menuBar.add(mnuExit);              // Kết thúc

        menuBar.revalidate();
        menuBar.repaint();
    }

    private void showUserInfo() {
        if (XAuth.user != null) {
            // 1. Hiện lời chào
            lblGreeting.setText("Xin chào " + XAuth.user.getFullName());

            // Load ảnh user từ thư mục resources: src/images/
            String photoName = XAuth.user.getPhoto();
            URL imageUrl = getClass().getResource("/images/" + photoName);

            if (imageUrl != null) {
                ImageIcon icon = new ImageIcon(imageUrl);
                ((ImageJPanel) pnlPhoto).setImage(icon.getImage());
            } else {
                System.err.println("Không tìm thấy ảnh user: " + photoName + ", load ảnh mặc định.");

                URL defaultUrl = getClass().getResource("/images/default.png");
                if (defaultUrl != null) {
                    ImageIcon defaultIcon = new ImageIcon(defaultUrl);
                    ((ImageJPanel) pnlPhoto).setImage(defaultIcon.getImage());
                } else {
                    ((ImageJPanel) pnlPhoto).setImage(null);
                    System.err.println("Không tìm thấy ảnh mặc định default.png");
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblGreeting;
    private javax.swing.JMenuItem mniBillManager;
    private javax.swing.JMenuItem mniBookManager;
    private javax.swing.JMenuItem mniCateroryManager;
    private javax.swing.JMenuItem mniCustomerManager;
    private javax.swing.JMenuItem mniRevenueManager;
    private javax.swing.JMenuItem mniUserManager;
    private javax.swing.JMenu mnuBill;
    private javax.swing.JMenu mnuChangePassword;
    private javax.swing.JMenu mnuExit;
    private javax.swing.JMenu mnuHistory;
    private javax.swing.JMenu mnuHome;
    private javax.swing.JMenu mnuManagement;
    private poly.book.component.ImageJPanel pnlPhoto;
    // End of variables declaration//GEN-END:variables

  

    @Override
    public void exit() {
        PolyBookController.super.exit(); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public void showJDialog(JDialog dialog) {
        PolyBookController.super.showJDialog(dialog); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public void showWelcomeJDialog(JFrame frame) {
        PolyBookController.super.showWelcomeJDialog(frame); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public void showLoginJDialog(JFrame frame) {
        PolyBookController.super.showLoginJDialog(frame); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public void showChangePasswordJDialog(JFrame frame) {
        PolyBookController.super.showChangePasswordJDialog(frame); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
   public void showBillJDialog(JFrame parent) {
    BillJDialog dialog = new BillJDialog(parent, true);
    dialog.open(); // => open() bên trong sẽ gọi setVisible(true)
}

    @Override
    public void showHistoryJDialog(JFrame frame) {
        PolyBookController.super.showHistoryJDialog(frame); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public void showBookManagerJDialog(JFrame frame) {
        PolyBookController.super.showBookManagerJDialog(frame); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public void showCategoryManagerJDialog(JFrame frame) {
        PolyBookController.super.showCategoryManagerJDialog(frame); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public void showBillManagerJDialog(JFrame frame) {
        PolyBookController.super.showBillManagerJDialog(frame); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public void showUserManagerJDialog(JFrame frame) {
        PolyBookController.super.showUserManagerJDialog(frame); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public void showCustomerManagerJDialog(JFrame frame) {
        PolyBookController.super.showCustomerManagerJDialog(frame); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    public void showRevenueManagerJDialog(JFrame frame) {
        PolyBookController.super.showRevenueManagerJDialog(frame); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

  
}
